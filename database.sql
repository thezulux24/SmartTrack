-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.cirugia_trazabilidad (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cirugia_id uuid NOT NULL,
  accion character varying NOT NULL,
  estado_anterior character varying,
  estado_nuevo character varying NOT NULL,
  usuario_id uuid NOT NULL,
  ubicacion character varying,
  coordenadas_lat numeric,
  coordenadas_lng numeric,
  timestamp timestamp with time zone DEFAULT now(),
  observaciones text,
  metadata jsonb,
  CONSTRAINT cirugia_trazabilidad_pkey PRIMARY KEY (id),
  CONSTRAINT cirugia_trazabilidad_cirugia_id_fkey FOREIGN KEY (cirugia_id) REFERENCES public.cirugias(id),
  CONSTRAINT cirugia_trazabilidad_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.cirugias (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  numero_cirugia character varying NOT NULL UNIQUE,
  medico_cirujano character varying NOT NULL,
  fecha_programada timestamp with time zone NOT NULL,
  hora_inicio time without time zone,
  duracion_estimada integer,
  estado character varying DEFAULT 'programada'::character varying,
  prioridad character varying DEFAULT 'normal'::character varying,
  notas text,
  tecnico_asignado_id uuid,
  usuario_creador_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  hospital_id uuid NOT NULL,
  tipo_cirugia_id uuid NOT NULL,
  cliente_id uuid NOT NULL,
  CONSTRAINT cirugias_pkey PRIMARY KEY (id),
  CONSTRAINT cirugias_tecnico_asignado_id_fkey FOREIGN KEY (tecnico_asignado_id) REFERENCES public.profiles(id),
  CONSTRAINT cirugias_usuario_creador_id_fkey FOREIGN KEY (usuario_creador_id) REFERENCES public.profiles(id),
  CONSTRAINT cirugias_hospital_id_fkey FOREIGN KEY (hospital_id) REFERENCES public.hospitales(id),
  CONSTRAINT cirugias_tipo_cirugia_id_fkey FOREIGN KEY (tipo_cirugia_id) REFERENCES public.tipos_cirugia(id),
  CONSTRAINT cirugias_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id)
);
CREATE TABLE public.clientes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  nombre character varying NOT NULL,
  apellido character varying NOT NULL,
  documento_tipo character varying NOT NULL DEFAULT 'cedula'::character varying,
  documento_numero character varying NOT NULL UNIQUE,
  fecha_nacimiento date,
  telefono character varying,
  email character varying,
  direccion text,
  ciudad character varying,
  pais character varying DEFAULT 'Ecuador'::character varying,
  observaciones text,
  estado character varying DEFAULT 'activo'::character varying,
  created_by uuid,
  updated_by uuid,
  CONSTRAINT clientes_pkey PRIMARY KEY (id),
  CONSTRAINT clientes_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT clientes_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.cotizacion_historial (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cotizacion_id uuid NOT NULL,
  estado_anterior USER-DEFINED,
  estado_nuevo USER-DEFINED NOT NULL,
  usuario_id uuid NOT NULL,
  comentario text,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT cotizacion_historial_pkey PRIMARY KEY (id),
  CONSTRAINT cotizacion_historial_cotizacion_id_fkey FOREIGN KEY (cotizacion_id) REFERENCES public.cotizaciones(id),
  CONSTRAINT cotizacion_historial_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.cotizacion_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cotizacion_id uuid NOT NULL,
  producto_id uuid,
  descripcion text NOT NULL,
  cantidad integer NOT NULL CHECK (cantidad > 0),
  precio_unitario numeric NOT NULL,
  precio_total numeric NOT NULL,
  observaciones text,
  orden integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cotizacion_items_pkey PRIMARY KEY (id),
  CONSTRAINT cotizacion_items_cotizacion_id_fkey FOREIGN KEY (cotizacion_id) REFERENCES public.cotizaciones(id),
  CONSTRAINT cotizacion_items_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.cotizaciones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  numero_cotizacion character varying NOT NULL UNIQUE,
  cliente_id uuid NOT NULL,
  tipo_cirugia_id uuid,
  hospital_id uuid,
  estado USER-DEFINED NOT NULL DEFAULT 'borrador'::cotizacion_estado,
  fecha_emision date NOT NULL DEFAULT CURRENT_DATE,
  fecha_vencimiento date NOT NULL,
  fecha_aprobacion timestamp with time zone,
  fecha_rechazo timestamp with time zone,
  subtotal numeric NOT NULL DEFAULT 0,
  costo_transporte numeric DEFAULT 0,
  descuento numeric DEFAULT 0,
  porcentaje_descuento numeric DEFAULT 0,
  iva numeric NOT NULL DEFAULT 0,
  total numeric NOT NULL DEFAULT 0,
  observaciones text,
  terminos_condiciones text,
  motivo_rechazo text,
  notas_internas text,
  created_by uuid NOT NULL,
  aprobada_por uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  convertida_a_cirugia boolean DEFAULT false,
  cirugia_id uuid,
  medico_cirujano character varying,
  fecha_programada date,
  CONSTRAINT cotizaciones_pkey PRIMARY KEY (id),
  CONSTRAINT cotizaciones_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT cotizaciones_tipo_cirugia_id_fkey FOREIGN KEY (tipo_cirugia_id) REFERENCES public.tipos_cirugia(id),
  CONSTRAINT cotizaciones_hospital_id_fkey FOREIGN KEY (hospital_id) REFERENCES public.hospitales(id),
  CONSTRAINT cotizaciones_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT cotizaciones_aprobada_por_fkey FOREIGN KEY (aprobada_por) REFERENCES public.profiles(id),
  CONSTRAINT cotizaciones_cirugia_id_fkey FOREIGN KEY (cirugia_id) REFERENCES public.cirugias(id)
);
CREATE TABLE public.envios (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  kit_id uuid NOT NULL,
  mensajero_id uuid NOT NULL,
  direccion_destino text NOT NULL,
  contacto_destino character varying,
  telefono_destino character varying,
  fecha_programada date NOT NULL,
  hora_salida timestamp with time zone,
  hora_llegada timestamp with time zone,
  estado character varying NOT NULL DEFAULT 'programado'::character varying CHECK (estado::text = ANY (ARRAY['programado'::character varying, 'en_transito'::character varying, 'entregado'::character varying]::text[])),
  observaciones text,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT envios_pkey PRIMARY KEY (id),
  CONSTRAINT envios_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id),
  CONSTRAINT envios_mensajero_id_fkey FOREIGN KEY (mensajero_id) REFERENCES public.mensajeros(id)
);
CREATE TABLE public.hoja_gasto_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  hoja_gasto_id uuid NOT NULL,
  producto_id uuid,
  categoria character varying NOT NULL CHECK (categoria::text = ANY (ARRAY['productos'::character varying, 'transporte'::character varying, 'otros'::character varying]::text[])),
  descripcion character varying NOT NULL,
  cantidad integer DEFAULT 1,
  precio_unitario numeric NOT NULL DEFAULT 0,
  precio_total numeric NOT NULL DEFAULT 0,
  fecha_gasto date,
  comprobante_url character varying,
  observaciones text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT hoja_gasto_items_pkey PRIMARY KEY (id),
  CONSTRAINT hoja_gasto_items_hoja_gasto_id_fkey FOREIGN KEY (hoja_gasto_id) REFERENCES public.hojas_gasto(id),
  CONSTRAINT hoja_gasto_items_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.hojas_gasto (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  numero_hoja character varying NOT NULL UNIQUE,
  cirugia_id uuid NOT NULL,
  tecnico_id uuid NOT NULL,
  fecha_creacion timestamp with time zone DEFAULT now(),
  fecha_cirugia date NOT NULL,
  estado character varying DEFAULT 'borrador'::character varying CHECK (estado::text = ANY (ARRAY['borrador'::character varying, 'revision'::character varying, 'aprobada'::character varying, 'rechazada'::character varying]::text[])),
  observaciones text,
  total_productos numeric DEFAULT 0,
  total_transporte numeric DEFAULT 0,
  total_otros numeric DEFAULT 0,
  total_general numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT hojas_gasto_pkey PRIMARY KEY (id),
  CONSTRAINT hojas_gasto_cirugia_id_fkey FOREIGN KEY (cirugia_id) REFERENCES public.cirugias(id),
  CONSTRAINT hojas_gasto_tecnico_id_fkey FOREIGN KEY (tecnico_id) REFERENCES public.profiles(id),
  CONSTRAINT hojas_gasto_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT hojas_gasto_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.hospitales (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nombre character varying NOT NULL,
  direccion text,
  telefono character varying,
  contacto_principal character varying,
  email character varying,
  ciudad character varying,
  es_activo boolean DEFAULT true,
  notas text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT hospitales_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inventario (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  producto_id uuid,
  cantidad integer NOT NULL DEFAULT 0,
  ubicacion character varying DEFAULT 'sede_principal'::character varying,
  estado character varying DEFAULT 'disponible'::character varying,
  fecha_vencimiento date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT inventario_pkey PRIMARY KEY (id),
  CONSTRAINT inventario_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.kit_productos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  kit_id uuid NOT NULL,
  producto_id uuid NOT NULL,
  cantidad_solicitada integer NOT NULL DEFAULT 1,
  cantidad_preparada integer DEFAULT 0,
  cantidad_enviada integer DEFAULT 0,
  cantidad_utilizada integer DEFAULT 0,
  cantidad_devuelta integer DEFAULT 0,
  precio_unitario numeric,
  lote character varying,
  fecha_vencimiento date,
  observaciones text,
  created_at timestamp with time zone DEFAULT now(),
  cantidad_recuperable integer DEFAULT 0,
  es_desechable boolean DEFAULT false,
  notas_devolucion text,
  CONSTRAINT kit_productos_pkey PRIMARY KEY (id),
  CONSTRAINT kit_productos_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id),
  CONSTRAINT kit_productos_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.kit_productos_limpieza (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  kit_producto_id uuid NOT NULL,
  kit_id uuid NOT NULL,
  producto_id uuid NOT NULL,
  estado_limpieza text NOT NULL DEFAULT 'pendiente'::text CHECK (estado_limpieza = ANY (ARRAY['pendiente'::text, 'en_proceso'::text, 'esterilizado'::text, 'aprobado'::text, 'desechado'::text])),
  cantidad_a_recuperar integer NOT NULL DEFAULT 0,
  cantidad_aprobada integer DEFAULT 0,
  es_desechable boolean DEFAULT false,
  notas text,
  observaciones_limpieza text,
  procesado_por uuid,
  fecha_inicio_proceso timestamp with time zone,
  fecha_fin_proceso timestamp with time zone,
  aprobado_por uuid,
  fecha_aprobacion timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  estado character varying DEFAULT 'enviado_limpieza'::character varying,
  fecha_devuelto_limpio timestamp without time zone,
  recibido_por_id uuid,
  observaciones_recepcion text,
  CONSTRAINT kit_productos_limpieza_pkey PRIMARY KEY (id),
  CONSTRAINT kit_productos_limpieza_kit_producto_id_fkey FOREIGN KEY (kit_producto_id) REFERENCES public.kit_productos(id),
  CONSTRAINT kit_productos_limpieza_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id),
  CONSTRAINT kit_productos_limpieza_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT kit_productos_limpieza_procesado_por_fkey FOREIGN KEY (procesado_por) REFERENCES auth.users(id),
  CONSTRAINT kit_productos_limpieza_aprobado_por_fkey FOREIGN KEY (aprobado_por) REFERENCES auth.users(id),
  CONSTRAINT kit_productos_limpieza_recibido_por_id_fkey FOREIGN KEY (recibido_por_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.kit_trazabilidad (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  kit_id uuid NOT NULL,
  accion character varying NOT NULL,
  estado_anterior character varying,
  estado_nuevo character varying NOT NULL,
  usuario_id uuid NOT NULL,
  ubicacion character varying,
  coordenadas_lat numeric,
  coordenadas_lng numeric,
  timestamp timestamp with time zone DEFAULT now(),
  observaciones text,
  metadata jsonb,
  CONSTRAINT kit_trazabilidad_pkey PRIMARY KEY (id),
  CONSTRAINT kit_trazabilidad_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id),
  CONSTRAINT kit_trazabilidad_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.kits_cirugia (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cirugia_id uuid NOT NULL,
  numero_kit character varying NOT NULL UNIQUE,
  qr_code character varying NOT NULL UNIQUE,
  estado character varying DEFAULT 'preparando'::character varying CHECK (estado::text = ANY (ARRAY['solicitado'::text, 'preparando'::text, 'listo_envio'::text, 'en_transito'::text, 'entregado'::text, 'validado'::text, 'en_uso'::text, 'devuelto'::text, 'en_limpieza'::text, 'finalizado'::text, 'cancelado'::text])),
  fecha_creacion timestamp with time zone DEFAULT now(),
  fecha_preparacion timestamp with time zone,
  fecha_envio timestamp with time zone,
  fecha_recepcion timestamp with time zone,
  fecha_devolucion timestamp with time zone,
  comercial_id uuid,
  tecnico_id uuid,
  logistica_id uuid,
  observaciones text,
  ubicacion_actual character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  cliente_receptor_nombre text,
  cliente_receptor_cedula text,
  cliente_validacion_fecha timestamp with time zone,
  cliente_validacion_qr text,
  fecha_inicio_limpieza timestamp with time zone,
  fecha_fin_limpieza timestamp with time zone,
  limpieza_aprobada_por uuid,
  fecha_aprobacion_limpieza timestamp with time zone,
  CONSTRAINT kits_cirugia_pkey PRIMARY KEY (id),
  CONSTRAINT kits_cirugia_cirugia_id_fkey FOREIGN KEY (cirugia_id) REFERENCES public.cirugias(id),
  CONSTRAINT kits_cirugia_comercial_id_fkey FOREIGN KEY (comercial_id) REFERENCES public.profiles(id),
  CONSTRAINT kits_cirugia_tecnico_id_fkey FOREIGN KEY (tecnico_id) REFERENCES public.profiles(id),
  CONSTRAINT kits_cirugia_logistica_id_fkey FOREIGN KEY (logistica_id) REFERENCES public.profiles(id),
  CONSTRAINT kits_cirugia_limpieza_aprobada_por_fkey FOREIGN KEY (limpieza_aprobada_por) REFERENCES auth.users(id)
);
CREATE TABLE public.mensajeros (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nombre character varying NOT NULL,
  telefono character varying NOT NULL,
  placa character varying,
  estado character varying NOT NULL DEFAULT 'disponible'::character varying CHECK (estado::text = ANY (ARRAY['disponible'::character varying, 'ocupado'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT mensajeros_pkey PRIMARY KEY (id)
);
CREATE TABLE public.mensajes_cirugia (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cirugia_id uuid NOT NULL,
  usuario_id uuid NOT NULL,
  mensaje text NOT NULL,
  tipo character varying DEFAULT 'texto'::character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  leido_por jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mensajes_cirugia_pkey PRIMARY KEY (id),
  CONSTRAINT mensajes_cirugia_cirugia_id_fkey FOREIGN KEY (cirugia_id) REFERENCES public.cirugias(id),
  CONSTRAINT mensajes_cirugia_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.movimientos_inventario (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  inventario_id uuid,
  producto_id uuid,
  tipo character varying NOT NULL,
  cantidad integer NOT NULL,
  motivo character varying,
  usuario_id uuid NOT NULL,
  fecha timestamp with time zone DEFAULT now(),
  ubicacion_origen character varying,
  ubicacion_destino character varying,
  observaciones text,
  referencia character varying,
  lote character varying,
  fecha_vencimiento date,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT movimientos_inventario_pkey PRIMARY KEY (id),
  CONSTRAINT movimientos_inventario_inventario_id_fkey FOREIGN KEY (inventario_id) REFERENCES public.inventario(id),
  CONSTRAINT movimientos_inventario_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT movimientos_inventario_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.notificaciones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL CHECK (user_id IS NOT NULL),
  type USER-DEFINED NOT NULL,
  priority USER-DEFINED DEFAULT 'medium'::notification_priority,
  title text NOT NULL,
  message text NOT NULL,
  icon text,
  icon_color text,
  link text,
  data jsonb DEFAULT '{}'::jsonb,
  read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notificaciones_pkey PRIMARY KEY (id),
  CONSTRAINT notificaciones_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.productos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  codigo character varying NOT NULL UNIQUE,
  nombre character varying NOT NULL,
  categoria character varying NOT NULL,
  precio numeric,
  stock_minimo integer DEFAULT 5,
  es_activo boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  unidad_medida character varying DEFAULT 'unidad'::character varying,
  descripcion text,
  proveedor character varying,
  ubicacion_principal character varying DEFAULT 'sede_principal_norte'::character varying,
  notas text,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT productos_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  full_name text,
  email text,
  role text NOT NULL CHECK (role = ANY (ARRAY['client'::text, 'comercial'::text, 'soporte_tecnico'::text, 'logistica'::text, 'admin'::text])),
  area text,
  company_name text,
  phone text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.qr_codes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  codigo character varying NOT NULL UNIQUE,
  tipo character varying NOT NULL DEFAULT 'kit'::character varying,
  referencia_id uuid NOT NULL,
  es_activo boolean DEFAULT true,
  fecha_generacion timestamp with time zone DEFAULT now(),
  fecha_expiracion timestamp with time zone,
  veces_escaneado integer DEFAULT 0,
  ultimo_escaneo timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  tipo_validacion character varying CHECK (tipo_validacion::text = ANY (ARRAY['entrega_cliente'::character varying, 'recepcion_tecnico'::character varying, 'devolucion_material'::character varying]::text[])),
  kit_id uuid,
  validado_por uuid,
  fecha_validacion timestamp with time zone,
  ubicacion_validacion text,
  foto_evidencia text,
  CONSTRAINT qr_codes_pkey PRIMARY KEY (id),
  CONSTRAINT qr_codes_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id),
  CONSTRAINT qr_codes_validado_por_fkey FOREIGN KEY (validado_por) REFERENCES public.profiles(id)
);
CREATE TABLE public.qr_escaneos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  qr_code_id uuid NOT NULL,
  usuario_id uuid,
  fecha_escaneo timestamp with time zone DEFAULT now(),
  ubicacion character varying,
  coordenadas_lat numeric,
  coordenadas_lng numeric,
  dispositivo_info jsonb,
  accion_realizada character varying,
  resultado character varying DEFAULT 'exitoso'::character varying,
  observaciones text,
  tipo_accion character varying CHECK (tipo_accion::text = ANY (ARRAY['entrega_kit'::character varying, 'recepcion_kit'::character varying, 'devolucion_kit'::character varying]::text[])),
  kit_id uuid,
  validado_por_nombre text,
  firma_digital text,
  CONSTRAINT qr_escaneos_pkey PRIMARY KEY (id),
  CONSTRAINT qr_escaneos_qr_code_id_fkey FOREIGN KEY (qr_code_id) REFERENCES public.qr_codes(id),
  CONSTRAINT qr_escaneos_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id),
  CONSTRAINT qr_escaneos_kit_id_fkey FOREIGN KEY (kit_id) REFERENCES public.kits_cirugia(id)
);
CREATE TABLE public.tipos_cirugia (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nombre character varying NOT NULL UNIQUE,
  descripcion text,
  duracion_promedio integer,
  productos_comunes jsonb,
  especialidad character varying,
  es_activo boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tipos_cirugia_pkey PRIMARY KEY (id)
);