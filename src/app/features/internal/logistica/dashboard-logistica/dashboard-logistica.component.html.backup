<section class="bg-gray-50 dark:bg-gray-900 min-h-screen">
  <!-- Header mejorado para móvil -->
  <header class="bg-gradient-to-r from-green-600 to-emerald-700 text-white shadow-lg">
    <div class="px-4 py-4">
      <!-- Top bar con logo y navegación -->
      <div class="flex justify-between items-center mb-3">
        <div class="flex items-center space-x-3">
          <img src="https://www.implameq.com/wp-content/uploads/logotipo-impla-300x78.png.webp" 
               alt="Implameq" class="h-8 brightness-0 invert">
          <span class="text-lg font-semibold">Dashboard Logística</span>
        </div>
        <div class="flex items-center space-x-2">
          <button 
            (click)="toggleAutoRefresh()"
            class="bg-white/20 hover:bg-white/30 text-white px-3 py-2 rounded-lg text-xs font-medium transition duration-200 shadow-md backdrop-blur-sm"
            [class.bg-green-500/30]="autoRefresh()">
            <svg class="w-3 h-3 mr-1" [class.animate-spin]="autoRefresh()" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Auto
          </button>
          <a [routerLink]="['/internal']" 
             class="bg-white/20 hover:bg-white/30 text-white px-3 py-2 rounded-lg text-sm font-medium transition duration-200 shadow-md backdrop-blur-sm inline-flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Volver
          </a>
        </div>
      </div>
      
      <!-- Título principal -->
      <div class="text-center">
        <h1 class="text-2xl font-bold mb-1">Dashboard Logística</h1>
        <p class="text-green-100 text-sm">Trazabilidad en tiempo real tipo "aeropuerto"</p>
      </div>
    </div>
  </header>

  <!-- Loading state -->
  <div *ngIf="loading()" class="px-4 py-6">
    <div class="max-w-lg mx-auto">
      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 p-6 text-center">
        <div class="animate-pulse space-y-4">
          <div class="h-4 bg-gray-200 rounded w-3/4 mx-auto"></div>
          <div class="h-4 bg-gray-200 rounded w-1/2 mx-auto"></div>
          <div class="h-4 bg-gray-200 rounded w-2/3 mx-auto"></div>
        </div>
        <p class="text-sm text-gray-500 mt-4">Cargando dashboard...</p>
      </div>
    </div>
  </div>

  <!-- Error state -->
  <div *ngIf="!loading() && error()" class="px-4 py-6">
    <div class="max-w-lg mx-auto">
      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 p-6 text-center">
        <div class="text-red-600 dark:text-red-400">
          <svg class="w-12 h-12 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z">
            </path>
          </svg>
          <p class="text-sm">{{ error() }}</p>
        </div>
        <button type="button" (click)="refreshData()"
                class="mt-4 w-full text-white bg-red-600 hover:bg-red-700 focus:ring-4 focus:outline-none 
                       focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
          Reintentar
        </button>
      </div>
    </div>
  </div>

  <!-- Alertas Críticas Móvil -->
  <div *ngIf="!loading() && !error() && alertasCriticas().length > 0" class="px-4 py-2">
    <div class="max-w-lg mx-auto">
      <div class="bg-red-50 border border-red-200 rounded-xl p-4 dark:bg-red-900/20 dark:border-red-800">
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0">
            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                    d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z">
              </path>
            </svg>
          </div>
          <div class="flex-1">
            <h3 class="text-sm font-medium text-red-800 dark:text-red-200">
              {{ alertasCriticas().length }} Alerta(s) Crítica(s)
            </h3>
            <div class="mt-2 space-y-2">
              @for (alerta of alertasCriticas(); track alerta.id) {
                <div class="flex items-start justify-between">
                  <p class="text-xs text-red-700 dark:text-red-300 flex-1 pr-2">{{ alerta.titulo }}: {{ alerta.descripcion }}</p>
                  <button 
                    (click)="resolverAlerta(alerta.id)"
                    class="text-red-600 hover:text-red-800 dark:text-red-400 flex-shrink-0">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                  </button>
                </div>
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Contenido principal -->
  <main *ngIf="!loading() && !error()" class="px-4 py-6">
    <!-- KPIs rápidos optimizados para móvil -->
    <div class="max-w-lg mx-auto grid grid-cols-2 gap-3 mb-6">
      
      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-4">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-600 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"/>
              <path d="M3 4a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 14.846 4.632 16 6.414 16H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 6H6.28l-.31-1.243A1 1 0 005 4H3z"/>
            </svg>
          </div>
          <div class="min-w-0">
            <p class="text-xl font-bold text-gray-900 dark:text-white">{{ metricas().despachosDelDia }}</p>
            <p class="text-xs text-gray-600 dark:text-gray-300">Despachos Hoy</p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-4">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gradient-to-br from-green-400 to-green-600 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <div class="min-w-0">
            <p class="text-xl font-bold text-gray-900 dark:text-white">{{ metricas().entregasCompletadas }}</p>
            <p class="text-xs text-gray-600 dark:text-gray-300">Entregadas</p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-4">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gradient-to-br from-purple-400 to-purple-600 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z"/>
            </svg>
          </div>
          <div class="min-w-0">
            <p class="text-xl font-bold text-gray-900 dark:text-white">{{ metricas().devolucionesPendientes }}</p>
            <p class="text-xs text-gray-600 dark:text-gray-300">Devoluciones</p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-4">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"/>
            </svg>
          </div>
          <div class="min-w-0">
            <p class="text-lg font-bold text-gray-900 dark:text-white">{{ formatTiempo(metricas().tiempoPromedioEntrega) }}</p>
            <p class="text-xs text-gray-600 dark:text-gray-300">Tiempo Promedio</p>
          </div>
        </div>
      </div>

    </div>

    <!-- Métricas adicionales -->
    <div class="max-w-lg mx-auto grid grid-cols-3 gap-3 mb-6">
      
      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-3">
        <div class="text-center">
          <div class="w-8 h-8 bg-gradient-to-br from-indigo-400 to-indigo-600 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"/>
            </svg>
          </div>
          <p class="text-lg font-bold text-gray-900 dark:text-white">{{ metricas().eficienciaEntregas.toFixed(1) }}%</p>
          <p class="text-xs text-gray-600 dark:text-gray-300">Eficiencia</p>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-3">
        <div class="text-center">
          <div class="w-8 h-8 bg-gradient-to-br from-red-400 to-red-600 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"/>
            </svg>
          </div>
          <p class="text-lg font-bold text-gray-900 dark:text-white">{{ metricas().kmTotalesRecorridos.toFixed(1) }}</p>
          <p class="text-xs text-gray-600 dark:text-gray-300">KM Hoy</p>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-3">
        <div class="text-center">
          <div class="w-8 h-8 bg-gradient-to-br from-teal-400 to-teal-600 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
            </svg>
          </div>
          <p class="text-lg font-bold text-gray-900 dark:text-white">{{ metricas().mensajerosActivos }}</p>
          <p class="text-xs text-gray-600 dark:text-gray-300">Mensajeros</p>
        </div>
      </div>

    </div>

    <!-- Navegación de Vistas -->
    <div class="max-w-lg mx-auto mb-6">
      <div class="bg-white rounded-xl shadow-md dark:bg-gray-800 dark:border dark:border-gray-700 p-1">
        <div class="grid grid-cols-2 gap-1">
          <button 
            (click)="setVista('general')"
            class="px-3 py-2 rounded-lg text-xs font-medium transition-colors text-center"
            [ngClass]="vistaActual() === 'general' ? 'bg-green-600 text-white shadow-sm' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'">
            <svg class="w-4 h-4 mx-auto mb-1" fill="currentColor" viewBox="0 0 20 20">
              <path d="M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"/>
            </svg>
            <div>General</div>
          </button>
          <button 
            (click)="setVista('mensajeros')"
            class="px-3 py-2 rounded-lg text-xs font-medium transition-colors text-center"
            [ngClass]="vistaActual() === 'mensajeros' ? 'bg-green-600 text-white shadow-sm' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'">
            <svg class="w-4 h-4 mx-auto mb-1" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"/>
            </svg>
            <div>Mensajeros</div>
          </button>
        </div>
        <div class="grid grid-cols-2 gap-1 mt-1">
          <button 
            (click)="setVista('despachos')"
            class="px-3 py-2 rounded-lg text-xs font-medium transition-colors text-center"
            [ngClass]="vistaActual() === 'despachos' ? 'bg-green-600 text-white shadow-sm' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'">
            <svg class="w-4 h-4 mx-auto mb-1" fill="currentColor" viewBox="0 0 20 20">
              <path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"/>
              <path d="M3 4a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 14.846 4.632 16 6.414 16H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 6H6.28l-.31-1.243A1 1 0 005 4H3z"/>
            </svg>
            <div>Despachos</div>
          </button>
          <button 
            (click)="setVista('alertas')"
            class="px-3 py-2 rounded-lg text-xs font-medium transition-colors text-center relative"
            [ngClass]="vistaActual() === 'alertas' ? 'bg-green-600 text-white shadow-sm' : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'">
            <svg class="w-4 h-4 mx-auto mb-1" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"/>
            </svg>
            <div>Alertas</div>
            @if (alertas().length > 0) {
              <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                {{ alertas().length }}
              </span>
            }
          </button>
        </div>
      </div>
    </div>

  <!-- Vista General (Dashboard tipo Aeropuerto) -->
  @if (vistaActual() === 'general') {
    <div class="space-y-6">
      
      <!-- Filtros de Estado -->
      <div class="bg-white rounded-xl shadow-sm p-4 border border-gray-200">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-900">Estado de Despachos</h3>
          <div class="flex space-x-2">
            <button 
              (click)="setFiltro('todos')"
              class="px-3 py-1 rounded-md text-sm transition-colors"
              [ngClass]="filtroEstado() === 'todos' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'">
              Todos
            </button>
            <button 
              (click)="setFiltro('activos')"
              class="px-3 py-1 rounded-md text-sm transition-colors"
              [ngClass]="filtroEstado() === 'activos' ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'">
              Activos
            </button>
            <button 
              (click)="setFiltro('urgentes')"
              class="px-3 py-1 rounded-md text-sm transition-colors"
              [ngClass]="filtroEstado() === 'urgentes' ? 'bg-red-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'">
              Urgentes
            </button>
            <button 
              (click)="setFiltro('retrasados')"
              class="px-3 py-1 rounded-md text-sm transition-colors"
              [ngClass]="filtroEstado() === 'retrasados' ? 'bg-orange-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'">
              Retrasados
            </button>
          </div>
        </div>

        <!-- Estadísticas Rápidas -->
        <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-3 mb-4">
          <div class="text-center p-2 bg-gray-50 rounded-lg">
            <div class="text-lg font-bold text-gray-900">{{ estadisticasVista().preparando }}</div>
            <div class="text-xs text-gray-600">Preparando</div>
          </div>
          <div class="text-center p-2 bg-yellow-50 rounded-lg">
            <div class="text-lg font-bold text-yellow-700">{{ estadisticasVista().enRuta }}</div>
            <div class="text-xs text-yellow-600">En Ruta</div>
          </div>
          <div class="text-center p-2 bg-green-50 rounded-lg">
            <div class="text-lg font-bold text-green-700">{{ estadisticasVista().entregado }}</div>
            <div class="text-xs text-green-600">Entregado</div>
          </div>
          <div class="text-center p-2 bg-purple-50 rounded-lg">
            <div class="text-lg font-bold text-purple-700">{{ estadisticasVista().recolectando }}</div>
            <div class="text-xs text-purple-600">Recolectando</div>
          </div>
          <div class="text-center p-2 bg-gray-50 rounded-lg">
            <div class="text-lg font-bold text-gray-700">{{ estadisticasVista().devuelto }}</div>
            <div class="text-xs text-gray-600">Devuelto</div>
          </div>
          <div class="text-center p-2 bg-red-50 rounded-lg">
            <div class="text-lg font-bold text-red-700">{{ estadisticasVista().retrasado }}</div>
            <div class="text-xs text-red-600">Retrasado</div>
          </div>
          <div class="text-center p-2 bg-orange-50 rounded-lg">
            <div class="text-lg font-bold text-orange-700">{{ estadisticasVista().urgentes }}</div>
            <div class="text-xs text-orange-600">Urgentes</div>
          </div>
          <div class="text-center p-2 bg-blue-50 rounded-lg">
            <div class="text-lg font-bold text-blue-700">{{ estadisticasVista().total }}</div>
            <div class="text-xs text-blue-600">Total</div>
          </div>
        </div>
      </div>

      <!-- Tabla de Despachos Estilo Aeropuerto -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-semibold text-gray-900">Estado de Despachos en Tiempo Real</h3>
        </div>
        
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Despacho
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Destino
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Mensajero
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Estado
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Horarios
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Progreso
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Acciones
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              @for (despacho of despachosFiltrados(); track despacho.id) {
                <tr class="hover:bg-gray-50 transition-colors"
                    [ngClass]="getPrioridadColor(despacho.prioridad)">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      @if (despacho.prioridad === 'urgente' || despacho.prioridad === 'critica') {
                        <i class="fas fa-exclamation-triangle text-red-500 mr-2"></i>
                      }
                      <div>
                        <div class="text-sm font-medium text-gray-900">{{ despacho.numeroDespacho }}</div>
                        <div class="text-sm text-gray-500">{{ despacho.tecnico }}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4">
                    <div class="text-sm text-gray-900">{{ despacho.cliente }}</div>
                    <div class="text-sm text-gray-500">{{ despacho.direccion }}</div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">{{ despacho.mensajero }}</div>
                    @if (despacho.ubicacionActual) {
                      <div class="text-xs text-gray-500">{{ despacho.ubicacionActual.direccion }}</div>
                    }
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ getEstadoColor(despacho.estado) }}">
                      {{ despacho.estado | titlecase }}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <div>Desp: {{ despacho.horaDespacho }}</div>
                    <div class="text-gray-500">
                      @if (despacho.horaRealEntrega) {
                        Entrega: {{ despacho.horaRealEntrega }}
                      } @else {
                        Est: {{ despacho.horaEstimadaEntrega }}
                      }
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    @if (despacho.tiempoEnRuta) {
                      <div class="text-sm text-gray-900">{{ formatTiempo(despacho.tiempoEnRuta) }}</div>
                      @if (despacho.distanciaRecorrida) {
                        <div class="text-xs text-gray-500">{{ despacho.distanciaRecorrida }} km</div>
                      }
                    } @else {
                      <span class="text-gray-400">-</span>
                    }
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <div class="flex space-x-2">
                      <button 
                        (click)="verDetalleDespacho(despacho.id)"
                        class="text-blue-600 hover:text-blue-900">
                        <i class="fas fa-eye"></i>
                      </button>
                      @if (despacho.estado === 'en_ruta' || despacho.estado === 'retrasado') {
                        <button 
                          (click)="reasignarMensajero(despacho.id)"
                          class="text-yellow-600 hover:text-yellow-900">
                          <i class="fas fa-exchange-alt"></i>
                        </button>
                      }
                    </div>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>
        
        @if (despachosFiltrados().length === 0) {
          <div class="text-center py-12">
            <i class="fas fa-truck text-gray-300 text-4xl mb-4"></i>
            <p class="text-gray-500">No hay despachos con el filtro seleccionado</p>
          </div>
        }
      </div>
    </div>
  }

  <!-- Vista de Mensajeros -->
  @if (vistaActual() === 'mensajeros') {
    <div class="bg-white rounded-xl shadow-sm border border-gray-200">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900">Estado de Mensajeros</h3>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6">
        @for (mensajero of mensajeros(); track mensajero.id) {
          <div class="border border-gray-200 rounded-lg p-4">
            <div class="flex items-center justify-between mb-3">
              <div class="flex items-center">
                <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                  <i class="fas fa-user text-blue-600"></i>
                </div>
                <div class="ml-3">
                  <p class="font-medium text-gray-900">{{ mensajero.nombre }}</p>
                  <p class="text-sm text-gray-600">{{ mensajero.vehiculo }} - {{ mensajero.placa }}</p>
                </div>
              </div>
              <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full" 
                    [ngClass]="{
                      'bg-green-100 text-green-800': mensajero.estado === 'disponible',
                      'bg-yellow-100 text-yellow-800': mensajero.estado === 'en_ruta',
                      'bg-blue-100 text-blue-800': mensajero.estado === 'entregando',
                      'bg-purple-100 text-purple-800': mensajero.estado === 'recolectando',
                      'bg-gray-100 text-gray-800': mensajero.estado === 'descanso'
                    }">
                {{ mensajero.estado | titlecase }}
              </span>
            </div>
            
            <div class="space-y-2 text-sm">
              <div class="flex justify-between">
                <span class="text-gray-600">Entregas:</span>
                <span class="font-medium">{{ mensajero.entregasCompletadas }}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">KM recorridos:</span>
                <span class="font-medium">{{ mensajero.kmRecorridos.toFixed(1) }} km</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Despachos asignados:</span>
                <span class="font-medium">{{ mensajero.despachosAsignados.length }}</span>
              </div>
            </div>
            
            <div class="mt-4 pt-3 border-t border-gray-200">
              <div class="flex items-center justify-between">
                <span class="text-xs text-gray-500">{{ mensajero.ubicacionActual.direccion }}</span>
                <button 
                  (click)="contactarMensajero(mensajero.id)"
                  class="text-blue-600 hover:text-blue-900 text-sm">
                  <i class="fas fa-phone mr-1"></i>
                  Contactar
                </button>
              </div>
            </div>
          </div>
        }
      </div>
    </div>
  }

  <!-- Vista de Alertas -->
  @if (vistaActual() === 'alertas') {
    <div class="bg-white rounded-xl shadow-sm border border-gray-200">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900">Centro de Alertas</h3>
      </div>
      
      <div class="p-6">
        @if (alertas().length === 0) {
          <div class="text-center py-12">
            <i class="fas fa-check-circle text-green-300 text-4xl mb-4"></i>
            <p class="text-gray-500">No hay alertas activas</p>
          </div>
        } @else {
          <div class="space-y-4">
            @for (alerta of alertas(); track alerta.id) {
              <div class="border border-gray-200 rounded-lg p-4"
                   [ngClass]="{
                     'border-red-300 bg-red-50': alerta.severidad === 'alta',
                     'border-yellow-300 bg-yellow-50': alerta.severidad === 'media',
                     'border-green-300 bg-green-50': alerta.severidad === 'baja'
                   }">
                <div class="flex items-start justify-between">
                  <div class="flex items-start">
                    <div class="flex-shrink-0 mr-3 mt-1">
                      @switch (alerta.tipo) {
                        @case ('retraso') {
                          <i class="fas fa-clock text-red-500"></i>
                        }
                        @case ('inventario') {
                          <i class="fas fa-box text-yellow-500"></i>
                        }
                        @case ('urgencia') {
                          <i class="fas fa-exclamation-triangle text-red-500"></i>
                        }
                        @case ('devolucion') {
                          <i class="fas fa-undo text-blue-500"></i>
                        }
                        @default {
                          <i class="fas fa-info-circle text-gray-500"></i>
                        }
                      }
                    </div>
                    <div class="flex-1">
                      <div class="flex items-center">
                        <h4 class="font-medium text-gray-900">{{ alerta.titulo }}</h4>
                        <span class="ml-2 inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ getSeveridadColor(alerta.severidad) }}">
                          {{ alerta.severidad | titlecase }}
                        </span>
                      </div>
                      <p class="text-sm text-gray-700 mt-1">{{ alerta.descripcion }}</p>
                      @if (alerta.accionSugerida) {
                        <p class="text-sm text-blue-600 mt-2">
                          <i class="fas fa-lightbulb mr-1"></i>
                          {{ alerta.accionSugerida }}
                        </p>
                      }
                      <p class="text-xs text-gray-500 mt-2">{{ alerta.horaCreacion }}</p>
                    </div>
                  </div>
                  <button 
                    (click)="resolverAlerta(alerta.id)"
                    class="text-gray-400 hover:text-gray-600 ml-4">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
              </div>
            }
          </div>
        }
      </div>
    </div>
  }

  <!-- Estados de carga -->
  @if (loading()) {
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div class="bg-white rounded-lg p-6 flex items-center">
        <i class="fas fa-spinner fa-spin text-blue-600 text-xl mr-3"></i>
        <span class="text-gray-900">Cargando dashboard...</span>
      </div>
    </div>
  }

  @if (error()) {
    <div class="fixed bottom-4 right-4 bg-red-50 border border-red-200 rounded-lg p-4 max-w-md">
      <div class="flex">
        <i class="fas fa-exclamation-circle text-red-500 mr-3"></i>
        <div>
          <p class="text-sm font-medium text-red-800">Error</p>
          <p class="text-sm text-red-700">{{ error() }}</p>
        </div>
      </div>
    </div>
  }
</div>