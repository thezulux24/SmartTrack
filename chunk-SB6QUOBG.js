import{f as $,l as w}from"./chunk-U6NWDCIK.js";import{M as m,S,Wb as h,la as N}from"./chunk-D2JNWC2G.js";import{a as y,b as v,i as s}from"./chunk-ODN5LVDJ.js";var b=class p{supabase=S(w);router=S($);notifications=N([]);toasts=N([]);channel=null;userId=null;config=N({showToast:!0,playSound:!0,vibrate:!0,duration:5e3});unreadCount=h(()=>this.notifications().filter(i=>!i.read).length);allNotifications=h(()=>this.notifications().sort((i,t)=>new Date(t.created_at).getTime()-new Date(i.created_at).getTime()));unreadNotifications=h(()=>this.allNotifications().filter(i=>!i.read));activeToasts=h(()=>this.toasts());stats=h(()=>{let i=this.notifications(),t={total:i.length,unread:i.filter(o=>!o.read).length,by_type:{nuevo_mensaje:0,cambio_estado_cirugia:0,cambio_estado_kit:0,alerta_stock:0,alerta_vencimiento:0,asignacion_cirugia:0,cambio_agenda:0,asignacion_mensajero:0,cambio_estado_envio:0,retraso_envio:0,error_logistico:0,solicitud_urgente:0,cambio_estado_hoja_gasto:0,aprobacion_pendiente:0,incidente_cirugia:0,cirugia_cancelada:0,sistema:0,cotizacion_aprobada:0,cotizacion_rechazada:0,cotizacion_proxima_vencer:0,cotizacion_vencida:0}};return i.forEach(o=>{t.by_type[o.type]!==void 0&&t.by_type[o.type]++}),t});constructor(){this.initializeService()}initializeService(){return s(this,null,function*(){try{let i=yield this.supabase.getSession();i?.user&&(this.userId=i.user.id,console.log("\u{1F514} Notification Service: Initializing for user",this.userId),yield this.loadNotifications(),this.subscribeToNotifications())}catch(i){console.error("\u274C Error initializing notification service:",i)}})}initialize(i){return s(this,null,function*(){this.userId=i,console.log("\u{1F514} Notification Service: Manual initialization for user",i),yield this.loadNotifications(),this.subscribeToNotifications()})}loadNotifications(){return s(this,null,function*(){if(!this.userId){console.warn("\u26A0\uFE0F NotificationService: No userId set, skipping load");return}try{console.log("\u{1F4E5} NotificationService: Loading notifications for",this.userId);let{data:i,error:t}=yield this.supabase.client.from("notificaciones").select("*").eq("user_id",this.userId).order("created_at",{ascending:!1}).limit(50);if(t)throw console.error("\u274C NotificationService: Error loading notifications:",t),t;i?(console.log("\u2705 NotificationService: Loaded",i.length,"notifications"),this.notifications.set(i)):console.log("\u{1F4ED} NotificationService: No notifications found")}catch(i){console.error("\u274C NotificationService: Exception loading notifications:",i)}})}subscribeToNotifications(){if(!this.userId){console.warn("\u26A0\uFE0F NotificationService: No userId, skipping realtime subscription");return}this.channel&&(console.log("\u{1F50C} NotificationService: Removing previous channel"),this.supabase.client.removeChannel(this.channel)),console.log("\u{1F50C} NotificationService: Creating realtime subscription for user:",this.userId),console.log("\u{1F4E1} Channel name:",`notifications:${this.userId}`),this.channel=this.supabase.client.channel(`notifications:${this.userId}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"notificaciones",filter:`user_id=eq.${this.userId}`},i=>{console.log("\u{1F4EC} NotificationService: \u2728 REALTIME EVENT RECEIVED! \u2728"),console.log("\u{1F4EC} Payload:",i);let t=i.new;this.handleNewNotification(t)}).subscribe((i,t)=>{console.log("\u{1F50C} NotificationService: Subscription status:",i),t&&console.error("\u274C NotificationService: Subscription error:",t),i==="SUBSCRIBED"&&(console.log("\u2705 NotificationService: Successfully subscribed to realtime!"),console.log("\u23F3 Waiting for new notifications...")),i==="CHANNEL_ERROR"&&console.error("\u274C NotificationService: Channel error - Realtime may not be enabled"),i==="TIMED_OUT"&&console.error("\u274C NotificationService: Subscription timed out")})}handleNewNotification(i){console.log("\u{1F389} NotificationService: Handling new notification",i),this.notifications.update(t=>[i,...t]),console.log("\u2705 NotificationService: Added to notifications list. Total:",this.notifications().length),this.config().showToast&&(console.log("\u{1F35E} NotificationService: Showing toast"),this.showToast(i)),this.config().playSound&&(console.log("\u{1F50A} NotificationService: Playing sound"),this.playNotificationSound()),this.config().vibrate&&"vibrate"in navigator&&navigator.vibrate(200)}createNotification(i,t,o,e,n="medium",a,l){return s(this,null,function*(){console.log("\u{1F528} NotificationService.createNotification called:",{userId:i,type:t,title:o,message:e,priority:n});try{let r={user_id:i,type:t,priority:n,title:o,message:e,icon:this.getIconForType(t),icon_color:this.getColorForPriority(n),link:l,data:a||{},read:!1};console.log("\u{1F4DD} NotificationService: Inserting notification:",r);let{data:c,error:g}=yield this.supabase.client.from("notificaciones").insert(r).select().single();if(g)throw console.error("\u274C NotificationService.createNotification: Supabase error:",g),g;return console.log("\u2705 NotificationService.createNotification: Success!",c),c}catch(r){return console.error("\u274C NotificationService.createNotification: Exception:",r),null}})}notifyUsers(i,t,o,e,n="medium",a,l){return s(this,null,function*(){let r=i.map(c=>this.createNotification(c,t,o,e,n,a,l));yield Promise.allSettled(r)})}notifyNewMessage(i,t,o,e,n){return s(this,null,function*(){console.log("\u{1F4E8} NotificationService.notifyNewMessage called with:",{recipientIds:i,cirugia_id:t,numero_cirugia:o,remitente_nombre:e,mensaje_preview:n});try{yield this.notifyUsers(i,"nuevo_mensaje",`Nuevo mensaje en ${o}`,`${e}: ${n.substring(0,50)}${n.length>50?"...":""}`,"medium",{cirugia_id:t,remitente_nombre:e},`/internal/chat/${t}`),console.log("\u2705 NotificationService.notifyNewMessage: Notifications sent successfully")}catch(a){console.error("\u274C NotificationService.notifyNewMessage: Error:",a)}})}notifyCirugiaStatusChange(i,t,o,e,n){return s(this,null,function*(){yield this.notifyUsers(i,"cambio_estado_cirugia",`${o} cambi\xF3 de estado`,`De "${e}" a "${n}"`,"high",{cirugia_id:t,numero_cirugia:o,estado_anterior:e,estado_nuevo:n},"/internal/agenda")})}notifyKitStatusChange(i,t,o,e,n){return s(this,null,function*(){yield this.notifyUsers(i,"cambio_estado_kit",`Kit de ${o} actualizado`,`Estado: ${n}`,"medium",{kit_id:t,numero_cirugia:o,estado_anterior:e,estado_nuevo:n},"/internal/logistica")})}notifyLowStock(i,t,o,e,n){return s(this,null,function*(){yield this.notifyUsers(i,"alerta_stock","\u26A0\uFE0F Stock bajo",`${o}: ${e} unidades (m\xEDnimo: ${n})`,"high",{producto_id:t,producto_nombre:o,cantidad_actual:e,cantidad_minima:n},"/internal/inventario")})}notifyExpiringProduct(i,t,o,e,n){return s(this,null,function*(){yield this.notifyUsers(i,"alerta_vencimiento","\u23F0 Producto pr\xF3ximo a vencer",`${o} vence en ${n} d\xEDas (${e})`,"urgent",{producto_id:t,producto_nombre:o,fecha_vencimiento:e},"/internal/inventario")})}notifyAssignedToSurgery(i,t,o,e,n){return s(this,null,function*(){yield this.createNotification(i,"asignacion_cirugia","\u{1F3E5} Nueva cirug\xEDa asignada",`${o} - ${n} el ${e}`,"high",{cirugia_id:t,numero_cirugia:o,fecha_programada:e},"/internal/agenda")})}notifyNewCirugia(i,t,o,e,n,a,l){return s(this,null,function*(){console.log("\u{1F3E5} NotificationService.notifyNewCirugia called:",{tecnico_asignado_id:i,cirugia_id:t,numero_cirugia:o});try{let r={cirugia_id:t,numero_cirugia:o,medico_cirujano:e,fecha_programada:n,hospital_nombre:a},c=yield this.getLogisticaUsers();i&&(console.log("\u{1F4E8} Notificando a t\xE9cnico asignado:",i),yield this.createNotification(i,"asignacion_cirugia","\u{1F3E5} Nueva cirug\xEDa asignada",`${o} - ${e} en ${a}`,"high",r,`/internal/agenda/${t}`)),c.length>0&&(console.log("\u{1F4E6} Notificando a log\xEDstica:",c),yield this.notifyUsers(c,"asignacion_cirugia","\u{1F4CB} Nueva cirug\xEDa programada",`${o} - ${e} (creada por ${l})`,"medium",r,`/internal/agenda/${t}`)),console.log("\u2705 NotificationService.notifyNewCirugia: Notifications sent successfully")}catch(r){console.error("\u274C NotificationService.notifyNewCirugia: Error:",r)}})}notifyAgendaChange(i,t,o,e,n,a,l,r,c,g=!1){return s(this,null,function*(){try{let f=[o];e&&e!==n&&f.push(e),n&&e!==n&&f.push(n);let d=g?"urgent":"high",u=g?"\u{1F6A8}":"\u{1F4C5}";yield this.notifyUsers(f.filter((C,E,I)=>I.indexOf(C)===E),"cambio_agenda",`${u} Cambio en agenda - ${t}`,`${l} en ${c}. Motivo: ${a}`,d,{cirugia_id:i,numero_cirugia:t,fecha_programada:r,hospital_nombre:c,motivo_cambio:a,tecnico_anterior_id:e||void 0,tecnico_nuevo_id:n||void 0},`/internal/agenda/${i}`),console.log("\u2705 NotificationService.notifyAgendaChange: Notifications sent")}catch(f){console.error("\u274C NotificationService.notifyAgendaChange: Error:",f)}})}notifyMensajeroAssigned(i,t,o,e,n,a,l){return s(this,null,function*(){try{let r=yield this.getLogisticaUsers();r.length>0&&(yield this.notifyUsers(r,"asignacion_mensajero","\u{1F69A} Mensajero asignado",`${n} asignado para entregar ${o} en ${a}`,"medium",{envio_id:i,kit_id:t,numero_kit:o,mensajero_id:e,mensajero_nombre:n,direccion_destino:a,fecha_programada:l},`/internal/logistica/envios/${i}`)),console.log("\u2705 NotificationService.notifyMensajeroAssigned: Notifications sent")}catch(r){console.error("\u274C NotificationService.notifyMensajeroAssigned: Error:",r)}})}notifyDeliveryStatusChange(i,t,o,e,n,a,l){return s(this,null,function*(){try{let r=[],c=yield this.getLogisticaUsers();r.push(...c),a&&r.push(a);let g={programado:"Programado",en_camino:"En camino",entregado:"Entregado",devuelto:"Devuelto",cancelado:"Cancelado"};yield this.notifyUsers(r.filter((f,d,u)=>u.indexOf(f)===d),"cambio_estado_envio","\u{1F4CD} Estado de env\xEDo actualizado",`${o}: ${g[e]||e} \u2192 ${g[n]||n}`,"medium",{envio_id:i,kit_id:t,numero_kit:o,estado_anterior:e,estado_nuevo:n,direccion_destino:l},`/internal/logistica/envios/${i}`),console.log("\u2705 NotificationService.notifyDeliveryStatusChange: Notifications sent")}catch(r){console.error("\u274C NotificationService.notifyDeliveryStatusChange: Error:",r)}})}notifyDeliveryDelay(i,t,o,e,n){return s(this,null,function*(){try{let a=yield this.getLogisticaUsers();a.length>0&&(yield this.notifyUsers(a,"retraso_envio","\u23F1\uFE0F Retraso en env\xEDo",`${o} retrasado. ${e}. Nueva fecha estimada: ${n}`,"high",{envio_id:i,kit_id:t,numero_kit:o,motivo_retraso:e,fecha_programada:n},`/internal/logistica/envios/${i}`)),console.log("\u2705 NotificationService.notifyDeliveryDelay: Notifications sent")}catch(a){console.error("\u274C NotificationService.notifyDeliveryDelay: Error:",a)}})}notifyDeliveryError(i,t,o,e,n){return s(this,null,function*(){try{let a=yield this.getLogisticaUsers();a.length>0&&(yield this.notifyUsers(a,"error_logistico","\u274C Error en env\xEDo",`${o}: ${e}. ${n}`,"urgent",{envio_id:i,kit_id:t,numero_kit:o,tipo_incidente:e,descripcion_incidente:n},`/internal/logistica/envios/${i}`)),console.log("\u2705 NotificationService.notifyDeliveryError: Notifications sent")}catch(a){console.error("\u274C NotificationService.notifyDeliveryError: Error:",a)}})}notifyUrgentRequest(i,t,o,e,n){return s(this,null,function*(){try{let a=yield this.getLogisticaUsers();a.length>0&&(yield this.notifyUsers(a,"solicitud_urgente","\u{1F6A8} SOLICITUD URGENTE",`${t} - ${o}: ${e} (por ${n})`,"urgent",{cirugia_id:i,numero_cirugia:t,tipo_incidente:o,descripcion_incidente:e},`/internal/agenda/${i}`)),console.log("\u2705 NotificationService.notifyUrgentRequest: Notifications sent")}catch(a){console.error("\u274C NotificationService.notifyUrgentRequest: Error:",a)}})}notifyHojaGastoStatusChange(i,t,o,e,n,a,l){return s(this,null,function*(){try{let r=[o],c={borrador:"Borrador",pendiente_aprobacion:"Pendiente de aprobaci\xF3n",aprobada:"Aprobada",rechazada:"Rechazada",pagada:"Pagada"},g=n==="rechazada"?"high":"medium",f=`${t}: ${c[e]||e} \u2192 ${c[n]||n}`;a&&(f+=` (por ${a})`),l&&(f+=`. ${l}`),yield this.notifyUsers(r,"cambio_estado_hoja_gasto","\u{1F4B0} Estado de hoja de gasto",f,g,{hoja_gasto_id:i,numero_hoja:t,estado_anterior:e,estado_nuevo:n},`/internal/hojas-gasto/${i}`),console.log("\u2705 NotificationService.notifyHojaGastoStatusChange: Notifications sent")}catch(r){console.error("\u274C NotificationService.notifyHojaGastoStatusChange: Error:",r)}})}notifyHojaGastoNeedsApproval(i,t,o,e,n){return s(this,null,function*(){try{let{data:a,error:l}=yield this.supabase.client.from("profiles").select("id").in("role",["admin","comercial"]).eq("is_active",!0);if(l||!a||a.length===0){console.log("\u26A0\uFE0F No hay aprobadores disponibles");return}let r=a.map(g=>g.id),c=`${t} por ${o} - Monto: $${e.toLocaleString()}`;n&&(c+=` (${n})`),yield this.notifyUsers(r,"aprobacion_pendiente","\u270D\uFE0F Aprobaci\xF3n pendiente",c,"high",{hoja_gasto_id:i,numero_hoja:t,monto_total:e},`/internal/hojas-gasto/${i}`),console.log("\u2705 NotificationService.notifyHojaGastoNeedsApproval: Notifications sent")}catch(a){console.error("\u274C NotificationService.notifyHojaGastoNeedsApproval: Error:",a)}})}notifyCirugiaIncident(i,t,o,e,n,a,l){return s(this,null,function*(){try{let r=[l];a&&r.push(a);let c=yield this.getLogisticaUsers();r.push(...c),yield this.notifyUsers(r.filter((g,f,d)=>d.indexOf(g)===f),"incidente_cirugia","\u2695\uFE0F Incidente en cirug\xEDa",`${t} - ${o}: ${e} (reportado por ${n})`,"urgent",{cirugia_id:i,numero_cirugia:t,tipo_incidente:o,descripcion_incidente:e},`/internal/agenda/${i}`),console.log("\u2705 NotificationService.notifyCirugiaIncident: Notifications sent")}catch(r){console.error("\u274C NotificationService.notifyCirugiaIncident: Error:",r)}})}notifyCirugiaCanceled(i,t,o,e,n,a,l,r){return s(this,null,function*(){try{let c=[l];a&&c.push(a);let g=yield this.getLogisticaUsers();c.push(...g),yield this.notifyUsers(c.filter((f,d,u)=>u.indexOf(f)===d),"cirugia_cancelada","\u{1F6AB} Cirug\xEDa cancelada",`${t} en ${n} (${e}) cancelada. Motivo: ${o}. Por: ${r}`,"urgent",{cirugia_id:i,numero_cirugia:t,fecha_programada:e,hospital_nombre:n,motivo_cambio:o},`/internal/agenda/${i}`),console.log("\u2705 NotificationService.notifyCirugiaCanceled: Notifications sent")}catch(c){console.error("\u274C NotificationService.notifyCirugiaCanceled: Error:",c)}})}markAsRead(i){return s(this,null,function*(){try{let{error:t}=yield this.supabase.client.from("notificaciones").update({read:!0}).eq("id",i);if(t)throw t;this.notifications.update(o=>o.map(e=>e.id===i?v(y({},e),{read:!0}):e))}catch(t){console.error("Error marking notification as read:",t)}})}markAllAsRead(){return s(this,null,function*(){if(this.userId)try{let{error:i}=yield this.supabase.client.from("notificaciones").update({read:!0}).eq("user_id",this.userId).eq("read",!1);if(i)throw i;this.notifications.update(t=>t.map(o=>v(y({},o),{read:!0})))}catch(i){console.error("Error marking all as read:",i)}})}deleteNotification(i){return s(this,null,function*(){try{let{error:t}=yield this.supabase.client.from("notificaciones").delete().eq("id",i);if(t)throw t;this.notifications.update(o=>o.filter(e=>e.id!==i))}catch(t){console.error("Error deleting notification:",t)}})}clearAll(){return s(this,null,function*(){if(this.userId)try{let{error:i}=yield this.supabase.client.from("notificaciones").delete().eq("user_id",this.userId);if(i)throw i;this.notifications.set([])}catch(i){console.error("Error clearing notifications:",i)}})}showToast(i){this.toasts.update(t=>[...t,i]),setTimeout(()=>{this.removeToast(i.id)},this.config().duration)}removeToast(i){this.toasts.update(t=>t.filter(o=>o.id!==i))}navigateToNotification(i){return s(this,null,function*(){yield this.markAsRead(i.id),i.link&&this.router.navigate([i.link])})}getLogisticaUsers(){return s(this,null,function*(){try{let{data:i,error:t}=yield this.supabase.client.from("profiles").select("id").eq("role","logistica").eq("is_active",!0);if(t)return console.error("\u274C Error fetching logistica users:",t),[];let o=(i||[]).map(e=>e.id);return console.log("\u{1F4E6} Logistica users found:",o.length),o}catch(i){return console.error("\u274C Exception getting logistica users:",i),[]}})}getIconForType(i){return{nuevo_mensaje:"\u{1F4AC}",cambio_estado_cirugia:"\u{1F3E5}",cambio_estado_kit:"\u{1F4E6}",alerta_stock:"\u26A0\uFE0F",alerta_vencimiento:"\u23F0",asignacion_cirugia:"\u{1F4CB}",cambio_agenda:"\u{1F4C5}",asignacion_mensajero:"\u{1F69A}",cambio_estado_envio:"\u{1F4CD}",retraso_envio:"\u23F1\uFE0F",error_logistico:"\u274C",solicitud_urgente:"\u{1F6A8}",cambio_estado_hoja_gasto:"\u{1F4B0}",aprobacion_pendiente:"\u270D\uFE0F",incidente_cirugia:"\u2695\uFE0F",cirugia_cancelada:"\u{1F6AB}",cotizacion_aprobada:"\u2705",cotizacion_rechazada:"\u274C",cotizacion_proxima_vencer:"\u23F0",cotizacion_vencida:"\u23F1\uFE0F",sistema:"\u2139\uFE0F"}[i]||"\u2139\uFE0F"}getColorForPriority(i){return{low:"text-gray-500",medium:"text-blue-500",high:"text-orange-500",urgent:"text-red-500"}[i]}playNotificationSound(){let i=new(window.AudioContext||window.webkitAudioContext),t=i.createOscillator(),o=i.createGain();t.connect(o),o.connect(i.destination),t.frequency.value=800,t.type="sine",o.gain.setValueAtTime(.3,i.currentTime),o.gain.exponentialRampToValueAtTime(.01,i.currentTime+.1),t.start(i.currentTime),t.stop(i.currentTime+.1)}updateConfig(i){this.config.update(t=>y(y({},t),i))}destroy(){this.channel&&(this.supabase.client.removeChannel(this.channel),this.channel=null)}static \u0275fac=function(t){return new(t||p)};static \u0275prov=m({token:p,factory:p.\u0275fac,providedIn:"root"})};export{b as a};
