import{a as b}from"./chunk-SJQHPYOF.js";import{a as h}from"./chunk-Q6XZXIU7.js";import{c as t,e as d,g as s,j as n,n as u,q as f,t as p}from"./chunk-NR6UGQL3.js";import{a as l,b as _}from"./chunk-FK42CRUA.js";var v=class g{constructor(i,r){this.supabase=i;this.trazabilidadService=r}getCirugias(){return t(this.supabase.client.from("cirugias").select(`
          *,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido,
            documento_tipo,
            documento_numero,
            telefono,
            email,
            ciudad
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email,
            area
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            direccion,
            ciudad,
            telefono,
            contacto_principal
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre,
            descripcion,
            duracion_promedio,
            especialidad
          )
        `).order("fecha_programada",{ascending:!0})).pipe(s(i=>{if(i.error)throw console.error("Error fetching cirugias:",i.error),new Error(i.error.message||"Error al cargar cirug\xEDas");return i.data||[]}),n(i=>(console.error("Service error:",i),d(()=>i))))}getCirugiaById(i){return t(this.supabase.client.from("cirugias").select(`
          *,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido,
            documento_tipo,
            documento_numero,
            telefono,
            email,
            ciudad
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email,
            area
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            direccion,
            ciudad,
            telefono,
            contacto_principal
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre,
            descripcion,
            duracion_promedio,
            especialidad
          )
        `).eq("id",i).single()).pipe(s(r=>{if(r.error)throw new Error(r.error.message||"Error al cargar cirug\xEDa");return r.data}),n(r=>(console.error("Error loading cirugia:",r),d(()=>r))))}createCirugia(i){return t(this.supabase.client.auth.getUser()).pipe(u(r=>{let e=r.data.user;if(!e)throw new Error("Usuario no autenticado");let o=_(l({},i),{usuario_creador_id:e.id});return t(this.supabase.client.from("cirugias").insert([o]).select(`
              *,
              tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
                id,
                full_name,
                email
              ),
              hospital_data:hospitales!cirugias_hospital_id_fkey(
                id,
                nombre,
                ciudad
              ),
              tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
                id,
                nombre
              )
            `).single())}),s(r=>{if(r.error)throw console.error("Error creating cirugia:",r.error),new Error(r.error.message||"Error al crear cirug\xEDa");return r.data}),u(r=>this.trazabilidadService.registrarEventoCirugia({cirugia_id:r.id,accion:"cirugia_creada",estado_nuevo:r.estado||"programada",observaciones:`Cirug\xEDa ${r.numero_cirugia} creada - ${r.tipo_cirugia_data?.nombre||"Sin tipo"}`,metadata:{numero_cirugia:r.numero_cirugia,tipo_cirugia:r.tipo_cirugia_data?.nombre,hospital:r.hospital_data?.nombre,fecha_programada:r.fecha_programada}}).pipe(s(()=>r),n(e=>(console.error("Error al registrar trazabilidad:",e),t([r]))))),n(r=>(console.error("Service error creating cirugia:",r),d(()=>r))))}updateCirugia(i,r){let e=_(l({},r),{updated_at:new Date().toISOString()});return t(this.supabase.client.from("cirugias").update(e).eq("id",i).select(`
          *,
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre
          )
        `).single()).pipe(s(o=>{if(o.error)throw console.error("Error updating cirugia:",o.error),new Error(o.error.message||"Error al actualizar cirug\xEDa");return o.data}),n(o=>(console.error("Service error updating cirugia:",o),d(()=>o))))}updateEstado(i,r,e){return t(this.supabase.client.auth.getUser()).pipe(u(o=>{let a=o.data.user;return t(this.supabase.client.from("cirugias").select("estado, numero_cirugia").eq("id",i).single()).pipe(u(c=>{if(c.error)throw new Error("Error al obtener estado actual");let m=c.data.estado,E=c.data.numero_cirugia;return t(this.supabase.client.from("cirugias").update({estado:r,updated_at:new Date().toISOString()}).eq("id",i)).pipe(u(k=>{if(k.error)throw new Error("Error al actualizar estado");return this.trazabilidadService.registrarEventoCirugia({cirugia_id:i,accion:"estado_cambiado",estado_anterior:m,estado_nuevo:r,observaciones:e||`Estado cambiado de ${m} a ${r}`,metadata:{numero_cirugia:E}}).pipe(n(w=>(console.error("Error al registrar trazabilidad:",w),t([null]))))}))}))}),s(()=>{}),n(o=>(console.error("Service error updating estado:",o),d(()=>o))))}deleteCirugia(i){return t(this.supabase.client.from("cirugias").delete().eq("id",i)).pipe(s(r=>{if(r.error)throw console.error("Error deleting cirugia:",r.error),new Error(r.error.message||"Error al eliminar cirug\xEDa")}),n(r=>(console.error("Service error deleting cirugia:",r),d(()=>r))))}getCirugiasByTecnico(i){return t(this.supabase.client.from("cirugias").select(`
          *,
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre
          )
        `).eq("tecnico_asignado_id",i).order("fecha_programada",{ascending:!0})).pipe(s(r=>{if(r.error)throw console.error("Error fetching cirugias by tecnico:",r.error),new Error(r.error.message||"Error al cargar cirug\xEDas del t\xE9cnico");return r.data||[]}),n(r=>(console.error("Service error loading tecnico cirugias:",r),d(()=>r))))}getCirugiasByDateRange(i,r){return t(this.supabase.client.from("cirugias").select(`
          *,
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre
          )
        `).gte("fecha_programada",i).lte("fecha_programada",r).order("fecha_programada",{ascending:!0})).pipe(s(e=>{if(e.error)throw console.error("Error fetching cirugias by date range:",e.error),new Error(e.error.message||"Error al cargar cirug\xEDas por fecha");return e.data||[]}),n(e=>(console.error("Service error loading date range cirugias:",e),d(()=>e))))}getSeguimientoCirugia(i){return t(this.supabase.client.from("cirugia_seguimiento").select(`
          *,
          usuario:profiles!cirugia_seguimiento_usuario_id_fkey(
            id,
            full_name
          )
        `).eq("cirugia_id",i).order("fecha_cambio",{ascending:!1})).pipe(s(r=>{if(r.error)throw console.error("Error fetching seguimiento:",r.error),new Error(r.error.message||"Error al cargar seguimiento");return r.data||[]}),n(r=>(console.error("Service error loading seguimiento:",r),d(()=>r))))}getCirugiasConKits(){return console.log("\u{1F50D} Ejecutando consulta getCirugiasConKits..."),t(this.supabase.client.from("cirugias").select(`
          id,
          numero_cirugia,
          fecha_programada,
          tecnico_asignado_id,
          estado,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name
          ),
          kits:kits_cirugia(
            id,
            numero_kit,
            estado,
            productos:kit_productos(
              id,
              producto_id,
              cantidad_solicitada,
              precio_unitario,
              observaciones,
              producto:productos(
                id,
                nombre,
                categoria,
                precio
              )
            )
          )
        `).order("fecha_programada",{ascending:!1}).limit(20)).pipe(s(i=>{if(console.log("\u{1F50D} Respuesta raw de Supabase:",i),i.error)throw console.error("\u274C Error en consulta Supabase:",i.error),new Error(i.error.message||"Error al cargar cirug\xEDas con kits");let r=i.data||[];console.log("\u{1F4CA} Datos raw recibidos:",r.length,"cirug\xEDas"),console.log("\u{1F4CA} Primera cirug\xEDa:",r[0]);let e=r.filter(a=>a.kits&&a.kits.length>0);console.log("\u{1F50D} Cirug\xEDas con kits:",e.length);let o=e.map(a=>({id:a.id,numero_cirugia:a.numero_cirugia,fecha_cirugia:a.fecha_programada,tecnico_asignado_id:a.tecnico_asignado_id,cliente:a.cliente,tecnico:{nombre:a.tecnico_asignado?.full_name?.split(" ")[0]||"Sin",apellido:a.tecnico_asignado?.full_name?.split(" ").slice(1).join(" ")||"Asignar"},kit:a.kits?.[0]?{nombre:`Kit ${a.kits[0].numero_kit}`,items:a.kits[0].productos?.map(c=>({id:c.producto?.id||c.id,nombre:c.producto?.nombre||"Producto sin nombre",categoria:this.mapCategoria(c.producto?.categoria||""),precio:c.precio_unitario||c.producto?.precio||0,cantidad_requerida:c.cantidad_solicitada||1,producto_id:c.producto_id}))||[]}:null})).filter(a=>a.kit&&a.kit.items.length>0);return console.log("\u2705 Datos transformados final:",o),o}),n(i=>(console.error("\u274C Service error loading cirugias con kits:",i),d(()=>i))))}mapCategoria(i){return{implantes:"productos",instrumentos:"productos",medicamentos:"productos",transporte:"transporte",otros:"otros"}[i]||"productos"}getCirugiaStats(){return t(this.supabase.client.from("cirugias").select("estado, prioridad, fecha_programada, tecnico_asignado_id")).pipe(s(i=>{if(i.error)throw new Error(i.error.message||"Error al cargar estad\xEDsticas");let r=i.data||[],e=new Date,o=new Date(e);return o.setDate(e.getDate()+1),{total:r.length,programadas:r.filter(a=>a.estado==="programada").length,en_curso:r.filter(a=>a.estado==="en_curso").length,completadas:r.filter(a=>a.estado==="completada").length,canceladas:r.filter(a=>a.estado==="cancelada").length,urgencias:r.filter(a=>a.estado==="urgencia"||a.prioridad==="urgencia").length,sin_tecnico:r.filter(a=>!a.tecnico_asignado_id&&a.estado==="programada").length,hoy:r.filter(a=>new Date(a.fecha_programada).toDateString()===e.toDateString()).length,manana:r.filter(a=>new Date(a.fecha_programada).toDateString()===o.toDateString()).length}}),n(i=>(console.error("Service error loading stats:",i),d(()=>i))))}static \u0275fac=function(r){return new(r||g)(p(h),p(b))};static \u0275prov=f({token:g,factory:g.\u0275fac,providedIn:"root"})};export{v as a};
