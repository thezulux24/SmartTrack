import{a as k}from"./chunk-6ATMWDJW.js";import{a as S}from"./chunk-SB6QUOBG.js";import{l as y}from"./chunk-U6NWDCIK.js";import{H as p,M as E,R as f,h as t,j as u,n as d,v as s}from"./chunk-D2JNWC2G.js";import{a as b,b as v}from"./chunk-ODN5LVDJ.js";var w=class h{constructor(r,i,e){this.supabase=r;this.trazabilidadService=i;this.notificationService=e}getCirugias(){return t(this.supabase.client.from("cirugias").select(`
          *,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido,
            documento_tipo,
            documento_numero,
            telefono,
            email,
            ciudad
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email,
            area
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            direccion,
            ciudad,
            telefono,
            contacto_principal
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre,
            descripcion,
            duracion_promedio,
            especialidad
          )
        `).order("fecha_programada",{ascending:!0})).pipe(d(r=>{if(r.error)throw console.error("Error fetching cirugias:",r.error),new Error(r.error.message||"Error al cargar cirug\xEDas");return r.data||[]}),s(r=>(console.error("Service error:",r),u(()=>r))))}getCirugiaById(r){return t(this.supabase.client.from("cirugias").select(`
          *,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido,
            documento_tipo,
            documento_numero,
            telefono,
            email,
            ciudad
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email,
            area
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            direccion,
            ciudad,
            telefono,
            contacto_principal
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre,
            descripcion,
            duracion_promedio,
            especialidad
          )
        `).eq("id",r).single()).pipe(d(i=>{if(i.error)throw new Error(i.error.message||"Error al cargar cirug\xEDa");return i.data}),s(i=>(console.error("Error loading cirugia:",i),u(()=>i))))}createCirugia(r){return t(this.supabase.client.auth.getUser()).pipe(p(i=>{let e=i.data.user;if(!e)throw new Error("Usuario no autenticado");let n=v(b({},r),{usuario_creador_id:e.id});return t(this.supabase.client.from("cirugias").insert([n]).select(`
              *,
              tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
                id,
                full_name,
                email
              ),
              hospital_data:hospitales!cirugias_hospital_id_fkey(
                id,
                nombre,
                ciudad
              ),
              tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
                id,
                nombre
              )
            `).single())}),d(i=>{if(i.error)throw console.error("Error creating cirugia:",i.error),new Error(i.error.message||"Error al crear cirug\xEDa");return i.data}),p(i=>this.trazabilidadService.registrarEventoCirugia({cirugia_id:i.id,accion:"cirugia_creada",estado_nuevo:i.estado||"programada",observaciones:`Cirug\xEDa ${i.numero_cirugia} creada - ${i.tipo_cirugia_data?.nombre||"Sin tipo"}`,metadata:{numero_cirugia:i.numero_cirugia,tipo_cirugia:i.tipo_cirugia_data?.nombre,hospital:i.hospital_data?.nombre,fecha_programada:i.fecha_programada}}).pipe(d(()=>i),s(e=>(console.error("Error al registrar trazabilidad:",e),t([i]))))),s(i=>(console.error("Service error creating cirugia:",i),u(()=>i))))}updateCirugia(r,i){let e=v(b({},i),{updated_at:new Date().toISOString()});return t(this.supabase.client.from("cirugias").select(`
          *,
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          comercial:profiles!cirugias_comercial_id_fkey(
            id,
            full_name
          )
        `).eq("id",r).single()).pipe(p(n=>{if(n.error)throw new Error("Error al obtener datos actuales");let a=n.data,o=!1,g=[],m=!1;if(i.fecha_programada&&i.fecha_programada!==a.fecha_programada){o=!0;let c=new Date(a.fecha_programada).toLocaleDateString(),_=new Date(i.fecha_programada).toLocaleDateString();g.push(`Fecha cambi\xF3 de ${c} a ${_}`),(new Date(i.fecha_programada).getTime()-Date.now())/(1e3*60*60)<48&&(m=!0)}if(i.hora_inicio&&i.hora_inicio!==a.hora_inicio&&(o=!0,g.push(`Hora cambi\xF3 de ${a.hora_inicio||"no definida"} a ${i.hora_inicio}`)),i.tecnico_asignado_id!==void 0&&i.tecnico_asignado_id!==a.tecnico_asignado_id){o=!0;let c=a.tecnico_asignado?.full_name||"Sin asignar";g.push(`T\xE9cnico cambi\xF3 de ${c}`),m=!0}return i.hospital_id&&i.hospital_id!==a.hospital_id&&(o=!0,g.push("Hospital cambi\xF3"),m=!0),t(this.supabase.client.from("cirugias").update(e).eq("id",r).select(`
              *,
              tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
                id,
                full_name,
                email
              ),
              hospital_data:hospitales!cirugias_hospital_id_fkey(
                id,
                nombre,
                ciudad
              ),
              tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
                id,
                nombre
              )
            `).single()).pipe(d(c=>{if(c.error)throw console.error("Error updating cirugia:",c.error),new Error(c.error.message||"Error al actualizar cirug\xEDa");if(o){let _=c.data;this.notificationService.notifyAgendaChange(r,_.numero_cirugia,a.comercial_id||a.usuario_creador_id,a.tecnico_asignado_id||null,_.tecnico_asignado_id||null,i.notas||"Modificaci\xF3n de agenda",g.join(", "),_.fecha_programada,_.hospital_data?.nombre||"Hospital",m).catch(l=>console.error("Error enviando notificaci\xF3n de cambio:",l))}return c.data}),s(c=>(console.error("Service error updating cirugia:",c),u(()=>c))))}))}updateEstado(r,i,e){return t(this.supabase.client.auth.getUser()).pipe(p(n=>{let a=n.data.user;return t(this.supabase.client.from("cirugias").select(`
              estado,
              numero_cirugia,
              fecha_programada,
              tecnico_asignado_id,
              usuario_creador_id,
              hospital_data:hospitales(nombre),
              tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(full_name)
            `).eq("id",r).single()).pipe(p(o=>{if(o.error)throw new Error("Error al obtener estado actual");let g=o.data.estado,m=o.data.numero_cirugia,c=o.data;return t(this.supabase.client.from("cirugias").update({estado:i,updated_at:new Date().toISOString()}).eq("id",r)).pipe(p(_=>{if(_.error)throw new Error("Error al actualizar estado");if(i==="cancelada"&&g!=="cancelada"){let l=c.hospital_data,C=Array.isArray(l)&&l.length>0?l[0]?.nombre:l?.nombre||"Hospital";this.notificationService.notifyCirugiaCanceled(r,m,e||"Cirug\xEDa cancelada",c.fecha_programada,C,c.tecnico_asignado_id||null,c.usuario_creador_id,a?.email||"Sistema").catch(D=>console.error("Error enviando notificaci\xF3n de cancelaci\xF3n:",D))}return this.trazabilidadService.registrarEventoCirugia({cirugia_id:r,accion:"estado_cambiado",estado_anterior:g,estado_nuevo:i,observaciones:e||`Estado cambiado de ${g} a ${i}`,metadata:{numero_cirugia:m}}).pipe(s(l=>(console.error("Error al registrar trazabilidad:",l),t([null]))))}))}))}),d(()=>{}),s(n=>(console.error("Service error updating estado:",n),u(()=>n))))}deleteCirugia(r){return t(this.supabase.client.from("cirugias").delete().eq("id",r)).pipe(d(i=>{if(i.error)throw console.error("Error deleting cirugia:",i.error),new Error(i.error.message||"Error al eliminar cirug\xEDa")}),s(i=>(console.error("Service error deleting cirugia:",i),u(()=>i))))}getCirugiasByTecnico(r){return t(this.supabase.client.from("cirugias").select(`
          *,
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre
          )
        `).eq("tecnico_asignado_id",r).order("fecha_programada",{ascending:!0})).pipe(d(i=>{if(i.error)throw console.error("Error fetching cirugias by tecnico:",i.error),new Error(i.error.message||"Error al cargar cirug\xEDas del t\xE9cnico");return i.data||[]}),s(i=>(console.error("Service error loading tecnico cirugias:",i),u(()=>i))))}getCirugiasByDateRange(r,i){return t(this.supabase.client.from("cirugias").select(`
          *,
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name,
            email
          ),
          hospital_data:hospitales!cirugias_hospital_id_fkey(
            id,
            nombre,
            ciudad
          ),
          tipo_cirugia_data:tipos_cirugia!cirugias_tipo_cirugia_id_fkey(
            id,
            nombre
          )
        `).gte("fecha_programada",r).lte("fecha_programada",i).order("fecha_programada",{ascending:!0})).pipe(d(e=>{if(e.error)throw console.error("Error fetching cirugias by date range:",e.error),new Error(e.error.message||"Error al cargar cirug\xEDas por fecha");return e.data||[]}),s(e=>(console.error("Service error loading date range cirugias:",e),u(()=>e))))}getSeguimientoCirugia(r){return t(this.supabase.client.from("cirugia_seguimiento").select(`
          *,
          usuario:profiles!cirugia_seguimiento_usuario_id_fkey(
            id,
            full_name
          )
        `).eq("cirugia_id",r).order("fecha_cambio",{ascending:!1})).pipe(d(i=>{if(i.error)throw console.error("Error fetching seguimiento:",i.error),new Error(i.error.message||"Error al cargar seguimiento");return i.data||[]}),s(i=>(console.error("Service error loading seguimiento:",i),u(()=>i))))}getCirugiasConKits(){return console.log("\u{1F50D} Ejecutando consulta getCirugiasConKits..."),t(this.supabase.client.from("cirugias").select(`
          id,
          numero_cirugia,
          fecha_programada,
          tecnico_asignado_id,
          estado,
          cliente:clientes!cirugias_cliente_id_fkey(
            id,
            nombre,
            apellido
          ),
          tecnico_asignado:profiles!cirugias_tecnico_asignado_id_fkey(
            id,
            full_name
          ),
          kits:kits_cirugia(
            id,
            numero_kit,
            estado,
            productos:kit_productos(
              id,
              producto_id,
              cantidad_solicitada,
              precio_unitario,
              observaciones,
              producto:productos(
                id,
                nombre,
                categoria,
                precio
              )
            )
          )
        `).order("fecha_programada",{ascending:!1}).limit(20)).pipe(d(r=>{if(console.log("\u{1F50D} Respuesta raw de Supabase:",r),r.error)throw console.error("\u274C Error en consulta Supabase:",r.error),new Error(r.error.message||"Error al cargar cirug\xEDas con kits");let i=r.data||[];console.log("\u{1F4CA} Datos raw recibidos:",i.length,"cirug\xEDas"),console.log("\u{1F4CA} Primera cirug\xEDa:",i[0]);let e=i.filter(a=>a.kits&&a.kits.length>0);console.log("\u{1F50D} Cirug\xEDas con kits:",e.length);let n=e.map(a=>({id:a.id,numero_cirugia:a.numero_cirugia,fecha_cirugia:a.fecha_programada,tecnico_asignado_id:a.tecnico_asignado_id,cliente:a.cliente,tecnico:{nombre:a.tecnico_asignado?.full_name?.split(" ")[0]||"Sin",apellido:a.tecnico_asignado?.full_name?.split(" ").slice(1).join(" ")||"Asignar"},kit:a.kits?.[0]?{nombre:`Kit ${a.kits[0].numero_kit}`,items:a.kits[0].productos?.map(o=>({id:o.producto?.id||o.id,nombre:o.producto?.nombre||"Producto sin nombre",categoria:this.mapCategoria(o.producto?.categoria||""),precio:o.precio_unitario||o.producto?.precio||0,cantidad_requerida:o.cantidad_solicitada||1,producto_id:o.producto_id}))||[]}:null})).filter(a=>a.kit&&a.kit.items.length>0);return console.log("\u2705 Datos transformados final:",n),n}),s(r=>(console.error("\u274C Service error loading cirugias con kits:",r),u(()=>r))))}mapCategoria(r){return{implantes:"productos",instrumentos:"productos",medicamentos:"productos",transporte:"transporte",otros:"otros"}[r]||"productos"}getCirugiaStats(){return t(this.supabase.client.from("cirugias").select("estado, prioridad, fecha_programada, tecnico_asignado_id")).pipe(d(r=>{if(r.error)throw new Error(r.error.message||"Error al cargar estad\xEDsticas");let i=r.data||[],e=new Date,n=new Date(e);return n.setDate(e.getDate()+1),{total:i.length,programadas:i.filter(a=>a.estado==="programada").length,en_curso:i.filter(a=>a.estado==="en_curso").length,completadas:i.filter(a=>a.estado==="completada").length,canceladas:i.filter(a=>a.estado==="cancelada").length,urgencias:i.filter(a=>a.estado==="urgencia"||a.prioridad==="urgencia").length,sin_tecnico:i.filter(a=>!a.tecnico_asignado_id&&a.estado==="programada").length,hoy:i.filter(a=>new Date(a.fecha_programada).toDateString()===e.toDateString()).length,manana:i.filter(a=>new Date(a.fecha_programada).toDateString()===n.toDateString()).length}}),s(r=>(console.error("Service error loading stats:",r),u(()=>r))))}static \u0275fac=function(i){return new(i||h)(f(y),f(k),f(S))};static \u0275prov=E({token:h,factory:h.\u0275fac,providedIn:"root"})};export{w as a};
