import{a as b}from"./chunk-SB6QUOBG.js";import{l as z}from"./chunk-U6NWDCIK.js";import{M as f,S as p,h as d,i as l,n as _,v as u}from"./chunk-D2JNWC2G.js";import{i as c}from"./chunk-ODN5LVDJ.js";var h=class m{supabase=p(z);notificationService=p(b);getCotizaciones(i){return d(c(this,null,function*(){let e=this.supabase.client.from("cotizaciones").select(`
            *,
            cliente:clientes(nombre, apellido, email, telefono, ciudad),
            tipo_cirugia:tipos_cirugia(nombre, descripcion),
            hospital:hospitales(nombre, ciudad),
            comercial:profiles!cotizaciones_created_by_fkey(full_name, email),
            items:cotizacion_items(
              *,
              producto:productos(codigo, nombre, categoria)
            )
          `).order("created_at",{ascending:!1});i?.estado&&(e=e.eq("estado",i.estado)),i?.cliente_id&&(e=e.eq("cliente_id",i.cliente_id)),i?.created_by&&(e=e.eq("created_by",i.created_by)),i?.fecha_inicio&&(e=e.gte("fecha_emision",i.fecha_inicio)),i?.fecha_fin&&(e=e.lte("fecha_emision",i.fecha_fin)),i?.search&&(e=e.or(`numero_cotizacion.ilike.%${i.search}%`));let{data:a,error:r}=yield e;if(r)throw r;return a||[]})).pipe(u(e=>(console.error("Error obteniendo cotizaciones:",e),l([]))))}getCotizacionesProximasAVencer(){return d(c(this,null,function*(){let i=new Date,e=new Date;e.setDate(i.getDate()+3);let{data:a,error:r}=yield this.supabase.client.from("cotizaciones").select(`
            *,
            cliente:clientes(nombre, apellido, email, telefono),
            comercial:profiles!cotizaciones_created_by_fkey(full_name, email)
          `).eq("estado","enviada").gte("fecha_vencimiento",i.toISOString().split("T")[0]).lte("fecha_vencimiento",e.toISOString().split("T")[0]).order("fecha_vencimiento",{ascending:!0});if(r)throw r;return a||[]})).pipe(u(i=>(console.error("Error obteniendo cotizaciones pr\xF3ximas a vencer:",i),l([]))))}getCotizacionById(i){return d(this.supabase.client.from("cotizaciones").select(`
          *,
          cliente:clientes(nombre, apellido, email, telefono, ciudad, documento_identidad),
          tipo_cirugia:tipos_cirugia(nombre, descripcion, duracion_promedio),
          hospital:hospitales(nombre, ciudad, direccion, telefono),
          comercial:profiles!cotizaciones_created_by_fkey(full_name, email, phone),
          items:cotizacion_items(
            *,
            producto:productos(codigo, nombre, categoria, precio)
          )
        `).eq("id",i).single()).pipe(_(e=>e.data),u(e=>(console.error("Error obteniendo cotizaci\xF3n:",e),l(null))))}createCotizacion(i){return c(this,null,function*(){try{let e=yield this.supabase.getSession();if(!e?.user?.id)return{exito:!1,mensaje:"Usuario no autenticado"};let{data:a,error:r}=yield this.supabase.client.from("cotizaciones").insert({cliente_id:i.cliente_id,tipo_cirugia_id:i.tipo_cirugia_id,hospital_id:i.hospital_id,fecha_vencimiento:i.fecha_vencimiento,costo_transporte:i.costo_transporte||0,descuento:i.descuento||0,porcentaje_descuento:i.porcentaje_descuento||0,observaciones:i.observaciones,terminos_condiciones:i.terminos_condiciones,notas_internas:i.notas_internas,created_by:e.user.id,estado:"borrador"}).select().single();if(r)return console.error("Error creando cotizaci\xF3n:",r),{exito:!1,mensaje:"Error al crear la cotizaci\xF3n"};if(i.items&&i.items.length>0){let n=i.items.map((t,s)=>({cotizacion_id:a.id,producto_id:t.producto_id,descripcion:t.descripcion,cantidad:t.cantidad,precio_unitario:t.precio_unitario,precio_total:t.cantidad*t.precio_unitario,observaciones:t.observaciones,orden:t.orden??s})),{error:o}=yield this.supabase.client.from("cotizacion_items").insert(n);if(o)return console.error("Error creando items:",o),yield this.supabase.client.from("cotizaciones").delete().eq("id",a.id),{exito:!1,mensaje:"Error al crear los items de la cotizaci\xF3n"}}return yield this.supabase.client.from("cotizacion_historial").insert({cotizacion_id:a.id,estado_nuevo:"borrador",usuario_id:e.user.id,comentario:"Cotizaci\xF3n creada"}),console.log("\u2705 Cotizaci\xF3n creada exitosamente:",a.numero_cotizacion),{exito:!0,cotizacion:a,mensaje:`Cotizaci\xF3n ${a.numero_cotizacion} creada exitosamente`}}catch(e){return console.error("Error en createCotizacion:",e),{exito:!1,mensaje:"Error inesperado al crear la cotizaci\xF3n"}}})}updateCotizacion(i,e){return c(this,null,function*(){try{let a={};e.cliente_id!==void 0&&(a.cliente_id=e.cliente_id),e.tipo_cirugia_id!==void 0&&(a.tipo_cirugia_id=e.tipo_cirugia_id),e.hospital_id!==void 0&&(a.hospital_id=e.hospital_id),e.fecha_vencimiento!==void 0&&(a.fecha_vencimiento=e.fecha_vencimiento),e.costo_transporte!==void 0&&(a.costo_transporte=e.costo_transporte),e.descuento!==void 0&&(a.descuento=e.descuento),e.porcentaje_descuento!==void 0&&(a.porcentaje_descuento=e.porcentaje_descuento),e.observaciones!==void 0&&(a.observaciones=e.observaciones),e.terminos_condiciones!==void 0&&(a.terminos_condiciones=e.terminos_condiciones),e.notas_internas!==void 0&&(a.notas_internas=e.notas_internas);let{error:r}=yield this.supabase.client.from("cotizaciones").update(a).eq("id",i);if(r)return console.error("Error actualizando cotizaci\xF3n:",r),{exito:!1,mensaje:"Error al actualizar la cotizaci\xF3n"};if(e.items&&(yield this.supabase.client.from("cotizacion_items").delete().eq("cotizacion_id",i),e.items.length>0)){let n=e.items.map((t,s)=>({cotizacion_id:i,producto_id:t.producto_id,descripcion:t.descripcion,cantidad:t.cantidad,precio_unitario:t.precio_unitario,precio_total:t.cantidad*t.precio_unitario,observaciones:t.observaciones,orden:t.orden??s})),{error:o}=yield this.supabase.client.from("cotizacion_items").insert(n);if(o)return console.error("Error actualizando items:",o),{exito:!1,mensaje:"Error al actualizar los items"}}return console.log("\u2705 Cotizaci\xF3n actualizada exitosamente"),{exito:!0,mensaje:"Cotizaci\xF3n actualizada exitosamente"}}catch(a){return console.error("Error en updateCotizacion:",a),{exito:!1,mensaje:"Error inesperado al actualizar la cotizaci\xF3n"}}})}cambiarEstado(i,e){return c(this,null,function*(){try{let a=yield this.supabase.getSession();if(!a?.user?.id)return{exito:!1,mensaje:"Usuario no autenticado"};let{data:r,error:n}=yield this.supabase.client.from("cotizaciones").select(`
          *,
          cliente:clientes(nombre, apellido, email),
          comercial:profiles!cotizaciones_created_by_fkey(full_name, email)
        `).eq("id",i).single();if(n||!r)return{exito:!1,mensaje:"Cotizaci\xF3n no encontrada"};let o=r.estado,t={estado:e.estado};e.estado==="rechazada"?(t.motivo_rechazo=e.motivo_rechazo,t.fecha_rechazo=new Date().toISOString()):e.estado==="aprobada"&&(t.fecha_aprobacion=new Date().toISOString(),t.aprobada_por=a.user.id);let{error:s}=yield this.supabase.client.from("cotizaciones").update(t).eq("id",i);return s?(console.error("Error actualizando estado:",s),{exito:!1,mensaje:"Error al cambiar el estado"}):(yield this.supabase.client.from("cotizacion_historial").insert({cotizacion_id:i,estado_anterior:o,estado_nuevo:e.estado,usuario_id:a.user.id,comentario:e.comentario}),yield this.enviarNotificacionCambioEstado(r,o,e.estado),console.log(`\u2705 Estado de cotizaci\xF3n ${r.numero_cotizacion} cambiado: ${o} \u2192 ${e.estado}`),{exito:!0,mensaje:`Estado cambiado a ${e.estado}`})}catch(a){return console.error("Error en cambiarEstado:",a),{exito:!1,mensaje:"Error inesperado al cambiar el estado"}}})}convertirACirugia(i,e){return c(this,null,function*(){try{let a=yield this.supabase.getSession();if(!a?.user?.id)return{exito:!1,mensaje:"Usuario no autenticado"};let{data:r,error:n}=yield this.supabase.client.from("cotizaciones").select("*, cliente:clientes(*)").eq("id",i).single();if(n||!r)return{exito:!1,mensaje:"Cotizaci\xF3n no encontrada"};if(r.estado!=="aprobada")return{exito:!1,mensaje:"Solo se pueden convertir cotizaciones aprobadas"};if(r.convertida_a_cirugia)return{exito:!1,mensaje:"Esta cotizaci\xF3n ya fue convertida en cirug\xEDa"};let{data:o,error:t}=yield this.supabase.client.from("cirugias").insert({cliente_id:r.cliente_id,tipo_cirugia_id:r.tipo_cirugia_id,hospital_id:r.hospital_id,medico_cirujano:e.medico_cirujano,fecha_programada:e.fecha_programada,hora_inicio:e.hora_inicio,tecnico_asignado_id:e.tecnico_asignado_id,prioridad:e.prioridad||"normal",notas:e.notas||`Creada desde cotizaci\xF3n ${r.numero_cotizacion}`,usuario_creador_id:a.user.id,estado:"programada"}).select().single();return t?(console.error("Error creando cirug\xEDa:",t),{exito:!1,mensaje:"Error al crear la cirug\xEDa"}):(yield this.supabase.client.from("cotizaciones").update({convertida_a_cirugia:!0,cirugia_id:o.id}).eq("id",i),yield this.supabase.client.from("cotizacion_historial").insert({cotizacion_id:i,estado_anterior:"aprobada",estado_nuevo:"aprobada",usuario_id:a.user.id,comentario:`Convertida en cirug\xEDa ${o.numero_cirugia}`}),yield this.notificarCirugiaCreada(r,o),console.log(`\u2705 Cotizaci\xF3n ${r.numero_cotizacion} convertida en cirug\xEDa ${o.numero_cirugia}`),{exito:!0,cirugia:o,mensaje:`Cirug\xEDa ${o.numero_cirugia} creada exitosamente`})}catch(a){return console.error("Error en convertirACirugia:",a),{exito:!1,mensaje:"Error inesperado al convertir la cotizaci\xF3n"}}})}deleteCotizacion(i){return c(this,null,function*(){try{let{data:e,error:a}=yield this.supabase.client.from("cotizaciones").select("estado, numero_cotizacion").eq("id",i).single();if(a||!e)return{exito:!1,mensaje:"Cotizaci\xF3n no encontrada"};if(e.estado!=="borrador")return{exito:!1,mensaje:"Solo se pueden eliminar cotizaciones en borrador"};let{error:r}=yield this.supabase.client.from("cotizaciones").delete().eq("id",i);return r?(console.error("Error eliminando cotizaci\xF3n:",r),{exito:!1,mensaje:"Error al eliminar la cotizaci\xF3n"}):(console.log(`\u2705 Cotizaci\xF3n ${e.numero_cotizacion} eliminada`),{exito:!0,mensaje:"Cotizaci\xF3n eliminada exitosamente"})}catch(e){return console.error("Error en deleteCotizacion:",e),{exito:!1,mensaje:"Error inesperado al eliminar la cotizaci\xF3n"}}})}getEstadisticas(i){return d(c(this,null,function*(){let e=this.supabase.client.from("cotizaciones").select("estado, total");i&&(e=e.eq("created_by",i));let{data:a,error:r}=yield e;if(r)throw r;let n={total:a.length,borradores:a.filter(o=>o.estado==="borrador").length,enviadas:a.filter(o=>o.estado==="enviada").length,aprobadas:a.filter(o=>o.estado==="aprobada").length,rechazadas:a.filter(o=>o.estado==="rechazada").length,vencidas:a.filter(o=>o.estado==="vencida").length,canceladas:a.filter(o=>o.estado==="cancelada").length,valor_total_aprobadas:a.filter(o=>o.estado==="aprobada").reduce((o,t)=>o+Number(t.total||0),0),valor_total_enviadas:a.filter(o=>o.estado==="enviada").reduce((o,t)=>o+Number(t.total||0),0),tasa_conversion:0};return n.enviadas>0&&(n.tasa_conversion=n.aprobadas/n.enviadas*100),n})).pipe(u(e=>(console.error("Error obteniendo estad\xEDsticas:",e),l({total:0,borradores:0,enviadas:0,aprobadas:0,rechazadas:0,vencidas:0,canceladas:0,valor_total_aprobadas:0,valor_total_enviadas:0,tasa_conversion:0}))))}getHistorial(i){return d(this.supabase.client.from("cotizacion_historial").select(`
          *,
          usuario:profiles(full_name, email)
        `).eq("cotizacion_id",i).order("timestamp",{ascending:!1})).pipe(_(e=>e.data||[]),u(e=>(console.error("Error obteniendo historial:",e),l([]))))}enviarNotificacionCambioEstado(i,e,a){return c(this,null,function*(){try{let r=i.created_by,n="",o="medium",t="sistema";switch(a){case"enviada":t="sistema",n=`Cotizaci\xF3n ${i.numero_cotizacion} enviada al cliente ${i.cliente?.nombre} ${i.cliente?.apellido}`,o="medium";break;case"aprobada":t="cotizacion_aprobada",n=`\xA1Cotizaci\xF3n ${i.numero_cotizacion} APROBADA por ${i.cliente?.nombre} ${i.cliente?.apellido}! \u{1F389}`,o="high";break;case"rechazada":t="cotizacion_rechazada",n=`Cotizaci\xF3n ${i.numero_cotizacion} rechazada por ${i.cliente?.nombre} ${i.cliente?.apellido}`,o="medium";break;case"vencida":t="cotizacion_vencida",n=`Cotizaci\xF3n ${i.numero_cotizacion} ha vencido sin respuesta del cliente`,o="low";break;default:return}yield this.notificationService.notifyUsers([r],t,`\u{1F4B0} ${a.toUpperCase()}`,n,o,{cotizacion_id:i.id,numero_cotizacion:i.numero_cotizacion,estado_anterior:e,estado_nuevo:a,cliente_nombre:`${i.cliente?.nombre} ${i.cliente?.apellido}`,total:i.total},`/internal/cotizaciones/${i.id}`),console.log(`\u{1F4E2} Notificaci\xF3n enviada: Cotizaci\xF3n ${a}`)}catch(r){console.error("Error enviando notificaci\xF3n de cambio de estado:",r)}})}notificarCirugiaCreada(i,e){return c(this,null,function*(){try{yield this.notificationService.notifyUsers([i.created_by],"nueva_cirugia","\u{1F3E5} Cirug\xEDa Programada",`Cirug\xEDa ${e.numero_cirugia} creada desde cotizaci\xF3n ${i.numero_cotizacion}`,"high",{cirugia_id:e.id,numero_cirugia:e.numero_cirugia,cotizacion_id:i.id},`/internal/agenda/cirugia/${e.id}`)}catch(a){console.error("Error notificando cirug\xEDa creada:",a)}})}verificarCotizacionesVencidas(){return c(this,null,function*(){try{let i=new Date().toISOString().split("T")[0],{data:e,error:a}=yield this.supabase.client.from("cotizaciones").select("*").eq("estado","enviada").lt("fecha_vencimiento",i);if(a)throw a;if(e&&e.length>0){for(let r of e)yield this.cambiarEstado(r.id,{estado:"vencida",comentario:"Cotizaci\xF3n vencida autom\xE1ticamente por sistema"});console.log(`\u2705 ${e.length} cotizaciones marcadas como vencidas`)}}catch(i){console.error("Error verificando cotizaciones vencidas:",i)}})}static \u0275fac=function(e){return new(e||m)};static \u0275prov=f({token:m,factory:m.\u0275fac,providedIn:"root"})};export{h as a};
